version: "3.8"

services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql

  destination_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  airflow_postgres:
    image: postgres:15
    networks:
      - elt_network
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.8.1
    depends_on:
      airflow_postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - elt_network
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: =JdRm8RLmvS07s89zEpH7sWr33nwrl7KQ9F-pLKRGsnY=
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
      _AIRFLOW_WWW_USER_CREATE: true
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
    command: >
      bash -c "airflow db init &&
              airflow users create --username airflow --firstname Airflow --lastname Admin --email airflowadmin@example.com --role Admin --password airflow"
  webserver:
    image: apache/airflow:2.8.1
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - elt_network
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: JdRm8RLmvS07s89zEpH7sWr33nwrl7KQ9F-pLKRGsnY=
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt_script:/opt/airflow/elt_script
      - ./customer_postgres:/opt/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    command: webserver

  scheduler:
    image: apache/airflow:2.8.1
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - elt_network
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: JdRm8RLmvS07s89zEpH7sWr33nwrl7KQ9F-pLKRGsnY=
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt_script:/opt/airflow/elt_script
      - ./customer_postgres:/opt/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler

  triggerer:
    image: apache/airflow:2.8.1
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - elt_network
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: JdRm8RLmvS07s89zEpH7sWr33nwrl7KQ9F-pLKRGsnY=
      AIRFLOW__WEBSERVER__SECRET_KEY: secret
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt_script:/opt/airflow/elt_script
      - ./customer_postgres:/opt/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    command: triggerer

networks:
  elt_network:
    driver: bridge
